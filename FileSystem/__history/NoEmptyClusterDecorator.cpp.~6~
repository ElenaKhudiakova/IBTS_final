//---------------------------------------------------------------------------

#pragma hdrstop

#include "NoEmptyClusterDecorator.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)

NoEmptyClusterDecorator::NoEmptyClusterDecorator(IteratorFS* Iterator)
	: IteratorFS(Iterator->FileSystem), Iterator(Iterator)
{

}

// Переопределённый метод First() от IteratorFS
void NoEmptyClusterDecorator::First() {
	Iterator->First();

	while (true) {
		// Если не удалось прочитать, то завершаем работу
		if (Iterator->IsDone()) {
			return;
		}

		// Получаем текущий кластер
		char* clusterBuffer = Iterator->GetCurrent();

		// Проверяем
		// Если начало кластера пустое, то считаем, что весь кластер пустой aka Хорьков Д.А.
		if (clusterBuffer[0] == 0x00) {
			// Читаем следующий кластер
			Iterator->Next();
		} else {
			break;
		}
	}
}

void NoEmptyClusterDecorator::Next() {
	Iterator->Next();

	while (true) {
		// Если не удалось прочитать, то завершаем работу
		if (Iterator->IsDone()) {
			return;
		}

		// Получаем текущий кластер
		char* clusterBuffer = Iterator->GetCurrent();

		// Проверяем
		// Если начало кластера пустое, то считаем, что весь кластер пустой aka Хорьков Д.А.
		if (clusterBuffer[0] == 0x00) {
			// Читаем следующий кластер
			Iterator->Next();
		} else {
			break;
		}
	}
}

bool NoEmptyClusterDecorator::IsDone() {
	return Iterator->IsDone();
}

char* NoEmptyClusterDecorator::GetCurrent() {
	return Iterator->GetCurrent();
}

